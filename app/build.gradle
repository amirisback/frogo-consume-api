plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {

    def projectApplicationId = "$appDomain.$appDevConsole.$appName"
    def projectVersionCode = (versionMajor * 100) + (versionMinor * 10) + (versionPatch * 1)
    def projectVersionName = "$versionMajor.$versionMinor.$versionPatch"

    // Declaration app name
    def nameApp = "Frogo Consume Api"
    def nameAppLower = nameApp.toLowerCase()

    // Declaration apk / aab name
    def nameAPK = nameAppLower.replace(" ", "-")

    // Declaration admob id for debug
    def debugAdmobPublisherId = "ca-app-pub-3940256099942544~3347511713"
    def debugAdmobBanner = "ca-app-pub-3940256099942544/6300978111"
    def debugAdmobInterstitial = "ca-app-pub-3940256099942544/1033173712"
    def debugAdmobInterstitialVideo = "ca-app-pub-3940256099942544/8691691433"
    def debugAdmobRewarded = "ca-app-pub-3940256099942544/5224354917"
    def debugAdmobRewardedInterstitial = "ca-app-pub-3940256099942544/5354046379"
    def debugAdmobNativeAdvanced = "ca-app-pub-3940256099942544/2247696110"
    def debugAdmobNativeAdvancedVideo = "ca-app-pub-3940256099942544/1044960115"

    // Declaration admob id for release
    def releaseAdmobPublisherId = ""
    def releaseAdmobBanner = ""
    def releaseAdmobInterstitial = ""
    def releaseAdmobInterstitialVideo = ""
    def releaseAdmobRewarded = ""
    def releaseAdmobRewardedInterstitial = ""
    def releaseAdmobNativeAdvanced = ""
    def releaseAdmobNativeAdvancedVideo = ""

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding = true
    }

    compileSdkVersion projectCompileSdkVersion
    buildToolsVersion projectBuildToolsVersion

    defaultConfig {
        applicationId projectApplicationId
        minSdkVersion projectMinSdkVersion
        targetSdkVersion projectTargetSdkVersion
        versionCode projectVersionCode
        versionName projectVersionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        // Declaration apps name debug mode
        def debugAttribute = " Development"
        def nameAppDebug = nameApp + debugAttribute

        // Naming APK // AAB
        setProperty("archivesBaseName", nameAPK + versionName + "#" + versionCode + "-"
                + new Date().format('ddMMyy'))

        resConfigs "en", "id"

        // Inject app name for debug
        resValue "string", "app_name", nameAppDebug

        // Inject admob id for debug
        resValue "string", "admob_publisher_id", debugAdmobPublisherId
        resValue "string", "admob_banner", debugAdmobBanner
        resValue "string", "admob_interstitial", debugAdmobInterstitial
        resValue "string", "admob_interstitial_video", debugAdmobInterstitialVideo
        resValue "string", "admob_rewarded", debugAdmobRewarded
        resValue "string", "admob_rewarded_interstitial", debugAdmobRewardedInterstitial
        resValue "string", "admob_native_advanced", debugAdmobNativeAdvanced
        resValue "string", "admob_native_advanced_video", debugAdmobNativeAdvancedVideo

    }

    signingConfigs {
        release {
            // You need to specify either an absolute path or include the
            // keystore file in the same directory as the build.gradle file.
            // [PROJECT FOLDER NAME/app/[COPY YOUT KEY STORE] .jks in here
            storeFile file("frogoboxdev.jks")
            storePassword "cronoclez"
            keyAlias "frogobox"
            keyPassword "xeonranger"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // Generated Signed APK / AAB
            signingConfig signingConfigs.release

            // Inject app name for release
            resValue "string", "app_name", nameApp

            // Inject admob id for release
            resValue "string", "admob_publisher_id", releaseAdmobPublisherId
            resValue "string", "admob_banner", releaseAdmobBanner
            resValue "string", "admob_interstitial", releaseAdmobInterstitial
            resValue "string", "admob_interstitial_video", releaseAdmobInterstitialVideo
            resValue "string", "admob_rewarded", releaseAdmobRewarded
            resValue "string", "admob_rewarded_interstitial", releaseAdmobRewardedInterstitial
            resValue "string", "admob_native_advanced", releaseAdmobNativeAdvanced
            resValue "string", "admob_native_advanced_video", releaseAdmobNativeAdvancedVideo

        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(':frogoconsumeapi')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}